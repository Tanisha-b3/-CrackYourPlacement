Find the duplicate number

#one Solution
class Solution {
    public int findDuplicate(int[] nums) {
      HashMap<Integer, Integer> map = new HashMap<>();
      for(int num: nums){
        map.put(num, map.getOrDefault(num,0)+1);
      }
      int count=0;
      for(int key : map.keySet()){
        if(map.get(key)>1){
            count= key;
        }
      }
      return count;
    }
}
#second Solution
class Solution {
    public int findDuplicate(int[] nums) {
        if (nums.length <= 1)
            return -1;

        int slow = nums[0];
        int fast = nums[nums[0]];
        while (slow != fast) {
            slow = nums[slow];
            fast = nums[nums[fast]];
        }

        fast = 0;
        while (fast != slow) {
            fast = nums[fast];
            slow = nums[slow];
        }
        return slow;
    }
}


