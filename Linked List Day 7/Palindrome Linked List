Palindrome Linked List

class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head.next==null||head==null){
            return true;
        }
    ListNode fast = head; 
    ListNode slow = head;
    while(fast.next!=null&&  fast.next.next!=null){
        slow= slow.next;
        fast= fast.next.next;
    }
    ListNode temp = reverse(slow.next);
    slow.next= temp;
    ListNode p1= head;
    ListNode p2= slow.next;
    while(p2!=null){
        if(p1.val!=p2.val){
            return false;
        }
        p1=p1.next;
        p2=p2.next;

    }
    
    return true;
    }
    public static ListNode reverse(ListNode head){
        if(head.next==null||head==null){
            return head;
        }
        ListNode newNode = reverse(head.next);
        head.next.next = head;
        head.next= null;
       return newNode; 
    }
}
