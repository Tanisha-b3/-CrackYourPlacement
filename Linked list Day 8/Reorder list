Reorder list

class Solution {
    public void reorderList(ListNode head) {
        ListNode temp= head;
        List<Integer> values = new ArrayList<>();
        while(temp!=null){
            values.add(temp.val);
            temp=temp.next;
        }
        int n = values.size();
        int i = 0, j = n - 1;
        List<Integer> reorderedValues = new ArrayList<>();
        while (i < j) {
            reorderedValues.add(values.get(i++)); // Add from the beginning
            reorderedValues.add(values.get(j--)); // Add from the end
        }
        // If the list has an odd number of elements, add the middle element
        if (n % 2 != 0) {
            reorderedValues.add(values.get(i));
        }

        // Step 3: Update the linked list with the reordered values
        temp = head;
        for (int k = 0; k < n; k++) {
            temp.val = reorderedValues.get(k);
            temp = temp.next;
        }
    }
}
